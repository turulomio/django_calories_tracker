# Generated by Django 4.0.3 on 2022-04-10 23:04

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Activities',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField()),
                ('description', models.TextField()),
                ('multiplier', models.DecimalField(decimal_places=4, max_digits=10)),
            ],
            options={
                'db_table': 'activities',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='AdditiveRisks',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField()),
            ],
            options={
                'db_table': 'additive_risks',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Additives',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField()),
                ('description', models.TextField()),
                ('additive_risks', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='catalogs.additiverisks')),
            ],
            options={
                'db_table': 'additives',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='FoodTypes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField()),
            ],
            options={
                'db_table': 'food_types',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Formats',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(blank=True, null=True)),
                ('amount', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('last', models.DateTimeField()),
            ],
            options={
                'db_table': 'formats',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='SystemCompanies',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(blank=True, null=True)),
                ('last', models.DateTimeField()),
                ('obsolete', models.BooleanField()),
            ],
            options={
                'db_table': 'system_companies',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='WeightWishes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField()),
            ],
            options={
                'db_table': 'weight_wishes',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='SystemProducts',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField()),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('fat', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('protein', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('carbohydrate', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('calories', models.DecimalField(decimal_places=2, max_digits=10)),
                ('salt', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('cholesterol', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('sodium', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('potassium', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('fiber', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('sugars', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('saturated_fat', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('ferrum', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('magnesium', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('phosphor', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('glutenfree', models.BooleanField()),
                ('calcium', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('obsolete', models.BooleanField()),
                ('version', models.DateTimeField()),
                ('version_description', models.TextField()),
                ('additives', models.ManyToManyField(to='catalogs.additives')),
                ('food_types', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='catalogs.foodtypes')),
                ('system_companies', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='catalogs.systemcompanies')),
                ('version_parent', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='catalogs.systemproducts')),
            ],
            options={
                'db_table': 'syste_products',
                'managed': True,
            },
        ),
    ]
